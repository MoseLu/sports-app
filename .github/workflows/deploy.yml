name: Deploy Sports App

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Type Check
        run: npm run vue-tsc --noEmit

      - name: Lint
        run: npm run lint

      - name: Run Tests
        run: npm test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Create Bundle
        run: |
          cd dist/spa
          zip -r bundle.zip .
          SHA256=$(sha256sum bundle.zip | awk '{print $1}')
          echo "SHA256=$SHA256" >> $GITHUB_ENV

      - name: Create Manifest
        run: |
          VERSION=$(node -p "require('./package.json').version")
          cat > dist/spa/manifest.json << EOF
          {
            "version": "${VERSION}",
            "bundleUrl": "https://redamancy.com.cn/bundles/bundle-${VERSION}.zip",
            "sha256": "${SHA256}",
            "releaseNotes": "Auto-generated release for version ${VERSION}"
          }
          EOF

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          cat >>~/.ssh/config <<END
          Host deploy_host
            HostName ${{ secrets.SERVER_HOST }}
            User ${{ secrets.SERVER_USER }}
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no
          END

      - name: Deploy to Server
        run: |
          scp -F ~/.ssh/config dist/spa/bundle.zip dist/spa/manifest.json deploy_host:/www/wwwroot/redamancy/backend/updates/
          ssh -F ~/.ssh/config deploy_host '
            cd /www/wwwroot/redamancy/backend/updates
            mv bundle.zip bundles/bundle-$(node -p "require(\"./manifest.json\").version").zip
            chown -R www:www .
            chmod -R 755 .
          '

      - name: Notify Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: good
          SLACK_TITLE: Deployment Successful
          SLACK_MESSAGE: 'Sports App v${{ steps.version.outputs.version }} has been deployed successfully!'

      - name: Notify Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: danger
          SLACK_TITLE: Deployment Failed
          SLACK_MESSAGE: 'Sports App deployment failed! Please check the logs.'
