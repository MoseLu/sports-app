name: CI/CD 后端部署

on:
  push:
    branches:
      - master     # 触发分支

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 拉取代码
      - name: Checkout 代码
        uses: actions/checkout@v3

      # 2. 设置 Go 环境
      - name: Setup Go 1.23.4
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'

      # 3. 编译并打包为 tar.gz
      - name: Build 并打包
        run: |
          cd backend
          go mod tidy
          go mod download
          go build -o sports-app-linux
          tar czf ../sports-app-linux.tar.gz sports-app-linux

      # 4. 清理 /root/backend 下的旧包
      - name: 清理旧包
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            mkdir -p /root/backend
            rm -f /root/backend/sports-app-linux.tar.gz

      # 5. 上传新包到 /root/backend
      - name: 上传包到 /root/backend
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "sports-app-linux.tar.gz"
          target: "/root/backend/"

      # 6. 部署覆盖并启动服务（使用 setsid+nohup 完全脱离 SSH 会话）
      - name: 部署并启动服务
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e

            # 解压压缩包并清理
            tar xzf /root/backend/sports-app-linux.tar.gz -C /root/backend/
            rm /root/backend/sports-app-linux.tar.gz

            # 覆盖旧二进制
            rm -f /www/wwwroot/redamancy/backend/sports-app-linux
            mv /root/backend/sports-app-linux /www/wwwroot/redamancy/backend/sports-app-linux
            chmod +x /www/wwwroot/redamancy/backend/sports-app-linux

            # 注入最新 .env
            cat > /www/wwwroot/redamancy/backend/.env << 'EOF'
            OSS_ACCESS_KEY_ID=${{ secrets.OSS_ACCESS_KEY_ID }}
            OSS_ACCESS_KEY_SECRET=${{ secrets.OSS_ACCESS_KEY_SECRET }}
            OSS_ENDPOINT=oss-cn-hangzhou.aliyuncs.com
            OSS_BUCKET=sports-app-images
            EOF

            # 确保日志目录存在
            mkdir -p /www/wwwroot/redamancy/backend/logs

            # 停掉旧进程
            pkill -f sports-app-linux || true

            # 使用 setsid + nohup 启动新进程
            # 1) setsid: 新会话，不继承当前 shell
            # 2) nohup: 忽略 SIGHUP
            # 3) 全部重定向 stdin/stdout/stderr
            setsid nohup /www/wwwroot/redamancy/backend/sports-app-linux \
              > /www/wwwroot/redamancy/backend/logs/app.log 2>&1 < /dev/null &

            # 脚本立即以 0 退出，不再等待后台进程
            exit 0
      
    