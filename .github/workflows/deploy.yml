# .github/workflows/deploy.yml
name: CI/CD 后端部署

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout 代码
        uses: actions/checkout@v3

      # 2. 设置 Go
      - name: Setup Go 1.23.4
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'

      # 3. 编译并打包二进制
      - name: 编译并打包
        run: |
          cd backend
          go mod tidy
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o sports-app-linux
          tar czf ../sports-app-linux.tar.gz sports-app-linux

      # 4. 启动 ssh-agent 并加载密钥
      - name: 启动 ssh-agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # 5. 创建远程目录
      - name: 在服务器上创建目录
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} \
            "mkdir -p /root/backend /www/wwwroot/redamancy/backend/static /www/wwwroot/redamancy/backend/logs"

      # 6. 上传二进制包和 favicon
      - name: 上传文件
        run: |
          scp -o StrictHostKeyChecking=no sports-app-linux.tar.gz \
              ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/root/backend/
          scp -o StrictHostKeyChecking=no backend/static/favicon.ico \
              ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/www/wwwroot/redamancy/backend/static/

      # 7. 部署并重启后端
      - name: 部署并重启后端
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          USER: ${{ secrets.SERVER_USER }}
          KEY: ${{ secrets.SERVER_SSH_KEY }}
        run: |
          # 启动 ssh-agent 并加载私钥
          eval "$(ssh-agent -s)"
          ssh-add - << 'EOF_KEY'
          $KEY
          EOF_KEY

          # 覆盖二进制和 .env
          scp -o StrictHostKeyChecking=no sports-app-linux.tar.gz $USER@$HOST:/root/backend/
          scp -o StrictHostKeyChecking=no backend/static/favicon.ico $USER@$HOST:/www/wwwroot/redamancy/backend/static/
          ssh -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            set -e
            # 解包并替换二进制
            tar xzf /root/backend/sports-app-linux.tar.gz -C /root/backend/
            mv -f /root/backend/sports-app-linux /www/wwwroot/redamancy/backend/sports-app-linux
            chmod +x /www/wwwroot/redamancy/backend/sports-app-linux

            # 写入 .env
            cat > /www/wwwroot/redamancy/backend/.env << 'EOT'
            OSS_ACCESS_KEY_ID=${{ secrets.OSS_ACCESS_KEY_ID }}
            OSS_ACCESS_KEY_SECRET=${{ secrets.OSS_ACCESS_KEY_SECRET }}
            OSS_ENDPOINT=oss-cn-hangzhou.aliyuncs.com
            OSS_BUCKET=sports-app-images
            EOT

            # 重载并重启 systemd 服务
            systemctl daemon-reload
            systemctl restart sports-app.service

            # 输出状态和日志，验证是否重启成功
            systemctl status sports-app.service --no-pager --lines 10
            journalctl -u sports-app.service -n 10 --no-pager

            exit 0
          EOF

